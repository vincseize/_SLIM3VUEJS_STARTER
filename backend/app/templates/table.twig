<div class="container my_container">
    <font color=grey>Current time: </font><font color=silver><i>{{ now }}</i></font>
    <br><br>
    <div style="vertical-align:top;margin:0;padding:0;">
        {# <div style="display:inline-block;vertical-align:top;margin:0;padding:0;">
            {% if fake == 'TRUE' %}
                <button type="button" name="btn_add_fake" id="btn_add_fake" class="btn btn-primary btn_add">ADD Fake Entry</button>
            {% else %}
                <button type="button" name="btn_add_fake" id="btn_add_fake" class="btn btn-primary btn_add" disabled>ADD Fake Entry</button>
            {% endif %} 
            &nbsp;<font color=silver><i>( nom | email ) see TestApiAction.php, _crud.php</i></font>
        </div>
        <br><br> #}
        <div style="display:inline-block;vertical-align:top;margin:0;padding:0;">
            <button type="button" name="btn_add_form_open" id="btn_add_form_open" class="btn btn-primary btn_add">ADD</button>
            {# <button type="button" name="btn_update_form_open" id="btn_update_form_open" class="btn btn-primary btn_add">UPDATE</button> #}
            {# {% if fake == 'TRUE' %}
            <button type="button" name="btn_add_form_open" id="btn_add_form_open" class="btn btn-primary btn_add">ADD</button>
            {% else %}
            <button type="button" name="btn_add_form_open" id="btn_add_form_open" class="btn btn-primary btn_add" disabled>ADD</button>
            {% endif %}  #}
        </div>
        <br><br>
        <div>
            <div class="col-sm-8 col-sm-offset-2">
                <div class="col-sm-12 form-column">
                    {% include 'table_form.twig' %}
                    {# <form id="form_add">
                        <div class="form-group">
                            <label for="country">Nom</label>
                            <input type="text" id="nom" name="nom" class="form-control">
                        </div>
                        <div class="form-group">
                            <label for="email">Email</label>
                            <input type="email" id="email" name="email" class="form-control">
                        </div>
                        <button type="button" name="btn_add_form" id="btn_add_form" class="btn btn-primary">Submit</button>
                    </form> #}
                </div>
            </div>
        </div>
        {# ------------ SEARCH #}
        {# <div class="input-group"> 
            <span class="input-group-btn">
                <button type='button' name="btn_search_by" id="btn_search_by" class="btn btn-default">
                <i class="fa fa-search"></i>&nbsp;&nbsp;RESTFUL Search by</span>
                </button>      
                <select name='search_select_col_restful' id='search_select_col_restful' class="form-control" style="width:auto;">
                    {% for key, value in table_fetchAll[0] %}
                        <option>{{ key }}</option>
                    {% endfor %}
                </select>
                <input name='search_input_restful' id='search_input_restful' class="form-control" type='text' value='Miss' style="width:auto;">    
            </span>
        </div> #}
        <div class="input-group"> 
            <span class="input-group-btn">
                {# <form> #}
                    <select name='search_select_col' id='search_select_col' class="form-control" style="width:auto;">
                        {% for key, value in tableColsNames_all %}
                            <option>{{ key }}</option>
                        {% endfor %}
                    </select>
                    <input name='search_input' id='search_input' class="form-control" type='text' value='' style="width:auto;">
                    <button type='submit' name="btn_search_by" id="btn_search_by" class="btn btn-default">
                        <i class="fa fa-search"></i>&nbsp;&nbsp;Filter by</span>
                    </button>   
                    &nbsp;&nbsp;
                    <button type='button' name="btn_search_by_json" id="btn_search_by_json" class="btn btn-default">
                        Json</span>
                    </button>    
                    &nbsp;&nbsp;
                    <button type='submit' name="btn_filter_clear" id="btn_filter_clear" class="btn btn-default">Clear</button>
                {# </form>   #}
            </span>
        </div>
    </div>
    <br>
    <table id="table_results" class="table table-striped table-bordered table-hover" cellspacing="0" width="100%">
        <thead>
            <tr>
                <th width="1%">#</th>
                {% for key, value in tableColsNames_all %}
                    <th class="th_sort" data-col="{{ key }}"><i class="fa fa-fw fa-sort"></i>{{ key }}</th>
                {% endfor %}  
                <th class="text-center">
                    <div align="center">
                        <button type="button" name="btn_delete" id="btn_delete" class="btn btn-xs btn-danger">Delete</button>
                        &nbsp;&nbsp;<input type="checkbox" id="btn_delete_all" name="btn_delete_all">
                    </div>
                </th>
            </tr>
        </thead>
        <tbody> 
            {% set s = (n_results-1)*pgn_dfltLimit %}
            {% for key,values in table_fetchAll %}
                {% set s = s+1 %}
                <tr id="{{ values.id }}">
                    <td width="1%">{{s}}</td>
                    {% for field, value in values %}
                        <td>
                            <a data-name="{{ field }}" data-type="text" data-pk="{{ values.id }}" data-url="path">
                                {{ value }}
                            </a>
                        </td>
                    {% endfor %}
                    <td class="text-center delete-tr">
                        {# <input type="button" name="bt-update_{{ values.id }}" class="bt-update"> #}
                        <button class="btn-small  btn_update_form_open" id="{{ values.id }}" name="{{ values.id }}"><i class="fa fa-pencil"></i></button>
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        <input type="checkbox" name="checkbox-delete_{{ values.id }}" class="checkbox-delete" value="{{ values.id }}">
                    </td>
                </tr>
            {% endfor %}
        </tbody>
    </table>
    {% include 'table_pgn.twig' %}
</div>

<script scoped>
$(document).ready(function(){

    conform_ui();

    function conform_ui() {
        $("#nResult_select").val("{{ n_result }}");
        let searchParams = new URLSearchParams(window.location.search);
        if(searchParams.has('{{filter}}') == true){
            $("#search_select_col").val(searchParams.get('{{filter}}'));
        }
        if(searchParams.has('{{filter_value}}') == true){
            $("#search_input").val(searchParams.get('{{filter_value}}'));
        }
    }

    function removeParam(key, url) {
        var rtn = url.split("?")[0],
            param,
            params_arr = [],
            queryString = (url.indexOf("?") !== -1) ? url.split("?")[1] : "";
        if (queryString !== "") {
            params_arr = queryString.split("&");
            for (var i = params_arr.length - 1; i >= 0; i -= 1) {
                param = params_arr[i].split("=")[0];
                if (param === key) {
                    params_arr.splice(i, 1);
                }
            }
            rtn = rtn + "?" + params_arr.join("&");
        }
        rtn = rtn.replace("??", "?");
        rtn = rtn.replace("?&", "?");
        return rtn;
    }

    function url_baseDirname(path){
        var spliPath = path.split('/');
        return spliPath[spliPath.length - 2];
    }

    function url_getTable(path){
        var spliPath = path.split('/');
        return spliPath[spliPath.length - 1];
    }

    function clear_delete_checkbox(){
        $('.checkbox-delete').each(function(){
            $('.checkbox-delete').prop('checked', false);
        });
        $('#btn_delete_all').prop('checked', false);
    }

    $(".th_sort").click(function(){
        console.log(this.getAttribute('data-col'));
    });
    
    $("#btn_add_form_open").click(function(){
        $("#div_form_add").toggle();
        $("#div_form_update").hide();
    });

    $(".btn_update_form_open").click(function(){
        $("#div_form_update").show();
        $("#div_form_add").hide();

        $.ajax({
            url:'{{url_form_update}}'+this.id,
            method:'GET',
            success:function(response)
            {
                // console.log(response[0]);
                var obj = response[0];
                Object.keys(obj).forEach(function(k){
                        var id = "#"+k;
                        var sel = $('#div_form_update').find(id);
                        $(sel).val(obj[k]);
                    });
            },
            error: function(err){
                console.log(err);
            }
        });
    });



    // $('#btn_add_fake').click(function(){
    //     $.ajax({
    //         url:'../public/_crud.php',
    //         method:'POST',
    //         data:{
    //             table:'{{ table }}',
    //         crud:'add',
    //         fake:'true'
    //         },
    //         success:function(response)
    //         {
    //             console.log(response);
    //             if (response == 'TRUE'){
    //                 clear_delete_checkbox();
    //                 setTimeout(function(){ 
    //                     location.reload(); // optional
    //                 }, 1000);
    //             }
    //         },
    //         error: function(err){
    //             console.log(err);
    //         }
    //     });
    // });

    // $('#btn_add_form').click(function(){
    //     $.ajax({
    //         url:'../public/_crud.php',
    //         method:'POST',
    //         data:{
    //             table:'{{ table }}',
    //             nom:'name',
    //             email:'email@zozo.fr',
    //             crud:'add',
    //             fake:'false'
    //             },
    //         success:function(response)
    //         {
    //             console.log(response);
    //             if (response == 'TRUE'){
    //                 clear_delete_checkbox();
    //                 setTimeout(function(){ 
    //                     // optional
    //                     // location.reload(); 
    //                 }, 1000);
    //             }
    //         },
    //         error: function(err){
    //             console.log(err);
    //         }
    //     });
    // });

    $('.a_btTables').click(function(){
        var url = url_baseDirname(window.location.href)+'/'+$(this).data("table")+'?{{ pgn_paramPage }}=1&{{ pgn_paramRes }}={{ n_results_default }}';
        // console.log(url);
        window.location.replace(url);
    });

    $('.btTables').click(function(){
        var url = url_baseDirname(window.location.href)+'/'+$(this).data("table")+'?{{ pgn_paramPage }}=1&{{ pgn_paramRes }}={{ n_results_default }}';
        // console.log(url);
        window.location.replace(url);
    });

    $('#btn_search_by_json').click(function(){
        c = document.getElementById('search_select_col');
        var col = c.options[c.selectedIndex].value;
        var search = document.getElementById('search_input').value;
        if(search.length==0){
            alert('Enter value');
        }else{
            url = 'api/{{ table }}/search/'+col+'/'+search+'';
            window.open(url,'_blank');
        }
    });

    $('#btn_search_by').click(function(){
        url = window.location.href;
        c = document.getElementById('search_select_col');
        var col = c.options[c.selectedIndex].value;
        var search = document.getElementById('search_input').value;
        if(search.length==0){
            alert('Enter value');
        }else{
            var sep = '?';
            var params = url.split('?')[1];
            try {
                count = params.length;
                sep = '&';
            }
            catch(err) {
                var count = 0;
                sep = '?';
            }
            var url = removeParam("{{message}}", url) ;
            var url = removeParam("{{filter}}", url) ;
            var url = removeParam("{{filter_value}}", url) ;
            url = url+sep+'{{filter}}='+col+'&{{filter_value}}='+search+'';
            window.location.href = url;
            // console.log(url);
        }
    });

    $('#btn_filter_clear').click(function(){
        url = window.location.href;
        var sep = '?';
        var params = url.split('?')[1];
        try {
            count = params.length;
            sep = '&';
        }
        catch(err) {
            var count = 0;
            sep = '?';
        }
        var url = removeParam("{{message}}", url) ;
        var url = removeParam("{{filter}}", url) ;
        var url = removeParam("{{filter_value}}", url) ;
        var url = removeParam("{{pgn_paramPage}}", url) ;
        var url = removeParam("{{pgn_paramRes}}", url) ;
        // var key_pgnRes = this.getAttribute("data-pgnRes");
        // var url = removeParam(key_pgnRes, url) ;
        // var key_pgnPage = this.getAttribute("data-pgnPage");
        // var url = removeParam(key_pgnPage, url) ;
        url = url+sep+'{{pgn_paramPage}}=1'+'&{{pgn_paramRes}}={{pgn_dfltLimit}}';
        window.location.href = url;
        // console.log(url);
    });

    $('.checkbox-delete').click(function(){
        id = $(this).val();
        if( $(this).is(':checked') ){
            $(this).closest('.delete-tr').css({'background-color': 'red'});
        }else{
            $(this).closest('.delete-tr').css({'background-color': ''});
        }
    });

    $('#btn_delete').click(function(){
        var ids = [];
        $('.checkbox-delete:checked').each(function(i){
            ids[i] = $(this).val();
        });

        if(ids.length === 0)
        {
            alert("Please Select at least one checkbox");
        } else {

            if(confirm("Are you sure you want to delete array ID ["+ ids +"] ?"))
            {
                $.ajax({
                // url:'../public/_crud.php',
                // method:'POST',
                // data:{table:'{{ table }}',ids:ids,crud:'delete'},
                // url:'Classes/api.class.php',
                type:'GET',
                data:{table:'{{ table }}',delete_ids:ids},
                success:function(response)
                {

                    // console.log(response);
                    ids.forEach(function(id) {
                            $(this).closest('.delete-tr').css({'background-color': 'red'});
                            $('tr#'+id+'').fadeOut('slow');
                        });
                        clear_delete_checkbox();
                        setTimeout(function(){ 
                            // location.reload(); // optional 
                        }, 1000);

                    // console.log(response);
                    // if (response == 'TRUE'){
                    //     ids.forEach(function(id) {
                    //         $(this).closest('.delete-tr').css({'background-color': 'red'});
                    //         $('tr#'+id+'').fadeOut('slow');
                    //     });
                    //     clear_delete_checkbox();
                    //     setTimeout(function(){ 
                    //         location.reload(); // optional
                    //     }, 1000);
                    // }
                },
                error: function(err){
                    console.log(err);
                }
                });

            }else{
                location.reload(); // optional
                return false;
            }

        }
    });
 
    $('#btn_delete_all').click(function(){

        if( $('#btn_delete_all').is(':checked') ){
            $('.checkbox-delete').each(function(){
                $('.checkbox-delete').prop('checked', true);
        });

        } else {    
            clear_delete_checkbox();
        }

    });

});
</script>
