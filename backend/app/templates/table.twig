<div class="container my_container">
    <font color=grey>Current time: </font><font color=silver><i>{{ now }}</i></font>
    <br><br>

        <style>
            /* .yellow-background {
                background: blue;
            }
            
            .pull-left {
                background: red;
            } */
            .pull-right {
                margin-right:0;
                padding-right:0;
            }
            .pull {
                vertical-align:top;
                margin:0;
                padding:0;
                width:100% important;
            }
        </style>

            <div class="row" style="vertical-align:top;margin:0;padding:0;width:100% important;">
                <div class="container my_container pull" styleX="vertical-align:top;margin:0;padding:0;width:100% important;">
                    <div class="col-md-4" style="margin-left:0;padding-left:0;">
                        <button type="button" name="btn_add_form_open" id="btn_add_form_open" class="btn btn-primary btn_add">ADD</button>
                    </div>
                    <div class="col-md-4 col-md-offset-4"style="margin-right:0;padding-right:0;">
                        <div class="pull-right" styleX="margin-right:0;padding-right:0;">
                            <div class="pull-right" styleX="margin-right:0;padding-right:0;">{% include 'table_form_filters.twig' %}</div>  
                        </div>    
                    </div>
                </div>
            </div>

            <div class="col-sm-8 col-sm-offset-2">
                <div>
                    <br>
                    {% include 'table_form_addUpdate.twig' %}
                </div>
            </div>

</div>

<div class="row"  style="vertical-align:top;margin:0;padding:0;width:100% important;">
    <div class="container my_container pull"  styleX="vertical-align:top;margin:0;padding:0;width:100% important;">
        <div class="col-md-4" style="vertical-align:top;margin:0;padding:0;width:100% important;">
            {% include 'table_pgn_top.twig' %}
        </div>
        <div class="col-md-4 col-md-offset-4" styleX="vertical-align:top;margin:0;padding:0;width:100% important;">
            <div class="pull-right" styleX="vertical-align:top;margin:0;padding:0;width:100% important;">
                <div class="pull-right"></div>  
            </div>
        </div>
    </div>
</div>

<div style="margin-left:14px;margin-right:14px;">

    <table id="table_results" class="table table-striped table-bordered table-hover" cellspacing="0" width="100%">
        <thead>
            <tr>
                <th width="1%">#</th>
                {% for key, value in tableColsNames_all %}
                    {% set faSort = 'fa-sort-desc' %}
                    {% if (order_value == "ASC" and key == order_by_value) %}
                        {% set faSort = 'fa-sort-asc' %}
                    {% endif %}
                    {% if (order_value == "DESC" and key == order_by_value) %}
                        {% set faSort = 'fa-sort-desc' %}
                    {% endif %}                 

                    <th class="th_sort" data-col="{{ key }}"><i class="fa fa-fw {{faSort}}"></i>{{ key }}</th>
                {% endfor %}  
                <th class="text-center">
                    <div align="center">
                        <button type="button" name="btn_delete" id="btn_delete" class="btn btn-xs btn-danger">Delete</button>
                        &nbsp;&nbsp;<input type="checkbox" id="btn_delete_all" name="btn_delete_all">
                    </div>
                </th>
            </tr>
        </thead>
        <tbody> 
            {% set s = (n_results-1)*pgn_dfltLimit %}
            {% for key,values in table_fetchAll %}
                {% set s = s+1 %}
                <tr id="{{ values.id }}">
                    <td width="1%">{{s}}</td>
                    {% for field, value in values %}
                        <td>
                            <a data-name="{{ field }}" data-type="text" data-pk="{{ values.id }}" data-url="path">
                                {{ value }}
                            </a>
                        </td>
                    {% endfor %}
                    <td class="text-center delete-tr">
                        <button class="btn-small  btn_update_form_open" id="{{ values.id }}" name="{{ values.id }}"><i class="fa fa-pencil"></i></button>
                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        <input type="checkbox" name="checkbox-delete_{{ values.id }}" class="checkbox-delete" value="{{ values.id }}">
                    </td>
                </tr>
            {% endfor %}
        </tbody>
    </table>

</div>

    {% include 'table_pgn_bottom.twig' %}
{# </div> #}

<script scoped>
$(document).ready(function(){

    conform_ui();

    function conform_ui() {
        $(".nResult_select").val("{{ n_result }}");
        let searchParams = new URLSearchParams(window.location.search);
        if(searchParams.has('{{filter}}') == true){
            $("#search_select_col").val(searchParams.get('{{filter}}'));
        }
        if(searchParams.has('{{filter_value}}') == true){
            $("#search_input").val(searchParams.get('{{filter_value}}'));
        }
    }

    function removeParam(key, url) {
        var rtn = url.split("?")[0],
            param,
            params_arr = [],
            queryString = (url.indexOf("?") !== -1) ? url.split("?")[1] : "";
        if (queryString !== "") {
            params_arr = queryString.split("&");
            for (var i = params_arr.length - 1; i >= 0; i -= 1) {
                param = params_arr[i].split("=")[0];
                if (param === key) {
                    params_arr.splice(i, 1);
                }
            }
            rtn = rtn + "?" + params_arr.join("&");
        }
        rtn = rtn.replace("??", "?");
        rtn = rtn.replace("?&", "?");
        return rtn;
    }

    function url_baseDirname(path){
        var spliPath = path.split('/');
        return spliPath[spliPath.length - 2];
    }

    function url_getTable(path){
        var spliPath = path.split('/');
        return spliPath[spliPath.length - 1];
    }

    function clear_delete_checkbox(){
        $('.checkbox-delete').each(function(){
            $('.checkbox-delete').prop('checked', false);
        });
        $('#btn_delete_all').prop('checked', false);
    }

    function checkParemeterExists(parameter)
        {
        //Get Query String from url
        fullQString = window.location.search.substring(1);
        
        paramCount = 0;
        queryStringComplete = "?";

        if(fullQString.length > 0)
        {
            //Split Query String into separate parameters
            paramArray = fullQString.split("&");
            
            //Loop through params, check if parameter exists.  
            for (i=0;i<paramArray.length;i++)
            {
                currentParameter = paramArray[i].split("=");
                if(currentParameter[0] == parameter) //Parameter already exists in current url
                {
                    return true;
                }
            }
        }
        
        return false;
}

    $(".th_sort").click(function(){

        url = window.location.href;
        // if({{n_results}}!=1){
        //     var url = removeParam("{{pgn_paramPage}}", url) ;
        //     var url = removeParam("{{pgn_paramRes}}", url) ;  
        // }



        col = this.getAttribute('data-col');
        // console.log(url);
        






        // var params = url.split('?')[1];
        // try {
        //     count = params.length;
        //     sep = '&';
        // }
        // catch(err) {
        //     var count = 0;
        //     sep = '?';
        // }


        check_pgn_paramPage = checkParemeterExists("{{pgn_paramPage}}");
        // console.log(check_pgn_paramPage);
        if(check_pgn_paramPage==true){
            var url = removeParam("{{pgn_paramPage}}", url) ;
        }
        // console.log(check_pgn_paramPage);

        check_pgn_paramRes = checkParemeterExists("{{pgn_paramRes}}");
        // console.log(check_pgn_paramRes);
        if(check_pgn_paramRes==true){
            var url = removeParam("{{pgn_paramRes}}", url) ;
        }

 
        var url = removeParam("{{message}}", url) ;
        var url = removeParam("{{order}}", url) ;
        var url = removeParam("{{order_by}}", url) ;

        var order_value = "DESC";
        if("{{order_value}}"=="ASC"){
            var order_value = "DESC";
        }else{
            var order_value = "ASC";
        }

        // console.log("----");
        // console.log("{{order_value}}");
        // console.log("----");
        // console.log("{{order_by_value}}");
        // console.log(order_value);

        // url = url+sep+'{{order}}={{order_value}}&{{order_by}}='+col+'';
        // http://127.0.0.1/_SLIM3VUEJS_STARTER/backend/public/testApi/clients&page=3&n_result=10&order=ASC&order_by=email

        var sep = '?';
        if(url.includes("?")==true){
            var sep = '&';
        }


        url = url+sep+'{{pgn_paramPage}}={{n_results}}&{{pgn_paramRes}}={{pgn_dfltLimit}}&{{order}}='+order_value+'&{{order_by}}='+col+'';


        window.location.href = url;
        // console.log(url);
        
    });
    
    $("#btn_add_form_open").click(function(){
        $("#div_form_add").toggle();
        $("#div_form_update").hide();
    });

    $(".btn_update_form_open").click(function(){
        $("#div_form_update").show();
        $("#div_form_add").hide();
        // console.log("{{url_form}}");
        // console.log(this.id);
        url = '{{url_form}}/'+this.id;
        // console.log(url);
        // url = window.location.href;
        // url = url+'&get_id='+this.id+'';
        $.ajax({
            
            url:url,
            method:'GET',
            success:function(response)
            {
                // console.log(response);
                var obj = response;
                Object.keys(obj).forEach(function(k){
                        var id = "#"+k;
                        var sel = $('#div_form_update').find(id);
                        $(sel).val(obj[k]);
                    });
            },
            error: function(err){
                console.log(err);
            }
        });
    });



    // $('#btn_add_fake').click(function(){
    //     $.ajax({
    //         url:'../public/_crud.php',
    //         method:'POST',
    //         data:{
    //             table:'{{ table }}',
    //         crud:'add',
    //         fake:'true'
    //         },
    //         success:function(response)
    //         {
    //             console.log(response);
    //             if (response == 'TRUE'){
    //                 clear_delete_checkbox();
    //                 setTimeout(function(){ 
    //                     location.reload(); // optional
    //                 }, 1000);
    //             }
    //         },
    //         error: function(err){
    //             console.log(err);
    //         }
    //     });
    // });

    // $('#btn_add_form').click(function(){
    //     $.ajax({
    //         url:'../public/_crud.php',
    //         method:'POST',
    //         data:{
    //             table:'{{ table }}',
    //             nom:'name',
    //             email:'email@zozo.fr',
    //             crud:'add',
    //             fake:'false'
    //             },
    //         success:function(response)
    //         {
    //             console.log(response);
    //             if (response == 'TRUE'){
    //                 clear_delete_checkbox();
    //                 setTimeout(function(){ 
    //                     // optional
    //                     // location.reload(); 
    //                 }, 1000);
    //             }
    //         },
    //         error: function(err){
    //             console.log(err);
    //         }
    //     });
    // });

    $('.a_btTables').click(function(){
        var url = url_baseDirname(window.location.href)+'/'+$(this).data("table")+'?{{ pgn_paramPage }}=1&{{ pgn_paramRes }}={{ n_results_default }}';
        // console.log(url);
        window.location.replace(url);
    });

    $('.btTables').click(function(){
        var url = url_baseDirname(window.location.href)+'/'+$(this).data("table")+'?{{ pgn_paramPage }}=1&{{ pgn_paramRes }}={{ n_results_default }}';
        // console.log(url);
        window.location.replace(url);
    });

    $('#btn_filter_by_json').click(function(){
        c = document.getElementById('search_select_col');
        var col = c.options[c.selectedIndex].value;
        var search = document.getElementById('search_input').value;
        if(search.length==0){
            alert('Enter value');
        }else{
            url = 'api/{{ table }}/search/'+col+'/'+search+'';
            window.open(url,'_blank');
        }
    });

    $('#btn_filter_by').click(function(){
        url = window.location.href;
        c = document.getElementById('search_select_col');
        var col = c.options[c.selectedIndex].value;
        var search = document.getElementById('search_input').value;
        if(search.length==0){
            alert('Enter value');
        }else{
            var sep = '?';
            var params = url.split('?')[1];
            try {
                count = params.length;
                sep = '&';
            }
            catch(err) {
                var count = 0;
                sep = '?';
            }
            var url = removeParam("{{message}}", url) ;
            var url = removeParam("{{filter}}", url) ;
            var url = removeParam("{{filter_value}}", url) ;
            var url = removeParam("{{pgn_paramPage}}", url) ;
            var url = removeParam("{{n_results_default}}", url) ;
            url = url+sep+'{{pgn_paramPage}}=1&'+'{{pgn_paramRes}}={{ n_results_default }}&'+'{{filter}}='+col+'&{{filter_value}}='+search+'';
            window.location.href = url;
            // console.log(url);
        }
    });

    $('#btn_filter_clear').click(function(){
        url = window.location.href;
        var sep = '?';
        var params = url.split('?')[1];
        try {
            count = params.length;
            sep = '&';
        }
        catch(err) {
            var count = 0;
            sep = '?';
        }
        var url = removeParam("{{message}}", url) ;
        var url = removeParam("{{filter}}", url) ;
        var url = removeParam("{{filter_value}}", url) ;
        var url = removeParam("{{pgn_paramPage}}", url) ;
        var url = removeParam("{{pgn_paramRes}}", url) ;
        // var key_pgnRes = this.getAttribute("data-pgnRes");
        // var url = removeParam(key_pgnRes, url) ;
        // var key_pgnPage = this.getAttribute("data-pgnPage");
        // var url = removeParam(key_pgnPage, url) ;
        url = url+sep+'{{pgn_paramPage}}=1'+'&{{pgn_paramRes}}={{pgn_dfltLimit}}';
        window.location.href = url;
        // console.log(url);
    });

    $('.checkbox-delete').click(function(){
        id = $(this).val();
        if( $(this).is(':checked') ){
            $(this).closest('.delete-tr').css({'background-color': 'red'});
        }else{
            $(this).closest('.delete-tr').css({'background-color': ''});
        }
    });

    $('#btn_delete').click(function(){
        var ids = [];
        $('.checkbox-delete:checked').each(function(i){
            ids[i] = $(this).val();
        });

        if(ids.length === 0)
        {
            alert("Please Select at least one checkbox");
        } else {

            if(confirm("Are you sure you want to delete array ID ["+ ids +"] ?"))
            {
                $.ajax({
                // url:'../public/_crud.php',
                // method:'POST',
                // data:{table:'{{ table }}',ids:ids,crud:'delete'},
                // url:'Classes/api.class.php',
                type:'GET',
                data:{table:'{{ table }}',delete_ids:ids},
                success:function(response)
                {

                    // console.log(response);
                    ids.forEach(function(id) {
                            $(this).closest('.delete-tr').css({'background-color': 'red'});
                            $('tr#'+id+'').fadeOut('slow');
                        });
                        clear_delete_checkbox();
                        setTimeout(function(){ 
                            // location.reload(); // optional 
                        }, 1000);

                    // console.log(response);
                    // if (response == 'TRUE'){
                    //     ids.forEach(function(id) {
                    //         $(this).closest('.delete-tr').css({'background-color': 'red'});
                    //         $('tr#'+id+'').fadeOut('slow');
                    //     });
                    //     clear_delete_checkbox();
                    //     setTimeout(function(){ 
                    //         location.reload(); // optional
                    //     }, 1000);
                    // }
                },
                error: function(err){
                    console.log(err);
                }
                });

            }else{
                location.reload(); // optional
                return false;
            }

        }
    });
 
    $('#btn_delete_all').click(function(){

        if( $('#btn_delete_all').is(':checked') ){
            $('.checkbox-delete').each(function(){
                $('.checkbox-delete').prop('checked', true);
        });

        } else {    
            clear_delete_checkbox();
        }

    });

});
</script>
